{"version":3,"sources":["../node_modules/unistore/dist/unistore.es.js","../src/lib/utils/meta.js","../src/lib/store.js"],"names":["n","t","r","createStore","u","length","push","e","f","i","o","action","arguments","apply","this","then","setState","subscribe","unsubscribe","getState","getMeta","name","target","document","node","head","querySelector","getAttribute","initialState","checkingSignedInState","isSignedIn","Boolean","window","localStorage","user","currentUrl","location","pathname","isOffline","isSideNavExpanded","isSearchExpanded","isPageLoading","store"],"mappings":"6CAAA,SAASA,EAAEA,EAAEC,GAAG,IAAI,IAAIC,KAAKD,EAAED,EAAEE,GAAGD,EAAEC,GAAG,OAAOF,EAAiB,SAAAG,YAASF,GAAG,IAAIC,EAAE,GAAG,SAASE,EAAEJ,GAAG,IAAI,IAAIC,EAAE,GAAGG,EAAE,EAAEA,EAAEF,EAAEG,OAAOD,IAAIF,EAAEE,KAAKJ,EAAEA,EAAE,KAAKC,EAAEK,KAAKJ,EAAEE,IAAIF,EAAED,EAAE,SAASM,EAAEH,EAAEG,EAAEC,GAAGP,EAAEM,EAAEH,EAAEJ,EAAEA,EAAE,GAAGC,GAAGG,GAAG,IAAI,IAAIK,EAAEP,EAAEQ,EAAE,EAAEA,EAAED,EAAEJ,OAAOK,IAAID,EAAEC,GAAGT,EAAEO,GAAG,OAAOP,EAAEA,GAAG,GAAG,CAACU,OAAO,SAASX,GAAG,SAASE,EAAED,GAAGM,EAAEN,GAAE,EAAGD,GAAG,OAAO,WAAW,IAAI,IAAII,EAAEQ,UAAUL,EAAE,CAACN,GAAGO,EAAE,EAAEA,EAAEI,UAAUP,OAAOG,IAAID,EAAED,KAAKF,EAAEI,IAAI,IAAIC,EAAET,EAAEa,MAAMC,KAAKP,GAAG,GAAG,MAAME,EAAE,OAAOA,EAAEM,KAAKN,EAAEM,KAAKb,GAAGA,EAAEO,KAAKO,SAAST,EAAEU,UAAU,SAASjB,GAAG,OAAOE,EAAEI,KAAKN,GAAG,WAAWI,EAAEJ,KAAKkB,YAAYd,EAAEe,SAAS,WAAW,OAAOlB,ICK/iB,SAAwBmB,QAAQC,EAAMC,EAASC,UAC3C,MAAMC,EAAOF,EAAOG,KAAKC,cAAc,cAAcL,OACrD,OAAKG,EAGEA,EAAKG,aAAa,YAAcH,EAAKG,aAAa,SAF9C,KCHf,MAAMC,aAAe,CAKjBC,uBAAuB,EAGvBC,WAAYC,QAAQC,OAAOC,aAAkC,qBAC7DC,KAAK,KAELC,WAAYH,OAAOI,SAASC,SAC5BC,UAAWP,QAAQX,QAAQ,YAC3BmB,mBAAmB,EACnBC,kBAAkB,EAGlBC,eAAe,GAInB,IAAIC,MAEAA,MAAQvC,YAAYyB","sourcesContent":["function n(n,t){for(var r in t)n[r]=t[r];return n}export default function(t){var r=[];function u(n){for(var t=[],u=0;u<r.length;u++)r[u]===n?n=null:t.push(r[u]);r=t}function e(u,e,f){t=e?u:n(n({},t),u);for(var i=r,o=0;o<i.length;o++)i[o](t,f)}return t=t||{},{action:function(n){function r(t){e(t,!1,n)}return function(){for(var u=arguments,e=[t],f=0;f<arguments.length;f++)e.push(u[f]);var i=n.apply(this,e);if(null!=i)return i.then?i.then(r):r(i)}},setState:e,subscribe:function(n){return r.push(n),function(){u(n)}},unsubscribe:u,getState:function(){return t}}}\n//# sourceMappingURL=unistore.es.js.map\n","/**\n * @param {string} name of meta tag to read\n * @param {!HTMLDocument=} target to read from\n * @param {?string} value of null for no node\n */\nexport default function getMeta(name, target = document) {\n    const node = target.head.querySelector(`meta[name=\"${name}\"]`);\n    if (!node) {\n        return null;\n    }\n    return node.getAttribute(\"content\") || node.getAttribute(\"value\");\n}","import createStore from \"unistore\";\nimport devtools from \"unistore/devtools\";\nimport getMeta from \"./utils/meta\";\nimport config from \"yunhaind_config\";\n\nconst initialState = {\n    // The first time the app boots we won't know whether the user is signed\n    // in or out.\n    // While we check, we should put things into an indeterminate state so we\n    // don't render incorrect UI.\n    checkingSignedInState: true,\n\n    // The user has successfully signed in; default to cached value to help prevent FOUC\n    isSignedIn: Boolean(window.localStorage[\"yunhaind_isSignedIn\"]),\n    user:null,\n\n    currentUrl: window.location.pathname,\n    isOffline: Boolean(getMeta(\"offline\")),\n    isSideNavExpanded: false,\n    isSearchExpanded: false,\n    \n    // Whether to show the progressbar and mark the main content as busy, during a load.\n    isPageLoading: false,\n\n};\n\nlet store;\nif (config.prod) {\n    store = createStore(initialState);\n} else {\n    store = devtools(createStore(initialState));\n}\n\nexport {store};"]}